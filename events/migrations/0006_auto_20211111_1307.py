# Generated by Django 3.1.13 on 2021-11-11 18:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0005_survey_default'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='baseevent',
            options={'ordering': ['-datetime_start'], 'permissions': (('view_events', "Show an event that isn't hidden"), ('add_raw_event', 'Use the editor to create an event'), ('event_images', 'Upload images to an event'), ('view_hidden_event', 'Show hidden events'), ('cancel_event', 'Declare an event to be cancelled'), ('event_attachments', 'Upload attachments to an event'), ('edit_event_times', 'Modify the dates for an event'), ('add_event_report', 'Add reports about the event'), ('edit_event_fund', 'Change where money for an event comes from'), ('view_event_billing', 'See financial info for event'), ('view_event_reports', 'See reports for event'), ('edit_event_text', 'Update any event descriptions'), ('adjust_event_owner', 'Change the event contact and organization'), ('edit_event_hours', 'Modify the time sheets'), ('edit_event_flags', 'Add flags to an event'), ('event_view_sensitive', 'Show internal notes and other metadata marked as not public'), ('approve_event', 'Accept an event'), ('decline_event', 'Decline an event'), ('can_chief_event', 'Can crew chief an event'), ('review_event', 'Review an event for billing'), ('adjust_event_charges', 'Add charges and change event type'), ('bill_event', 'Send bills and mark event paid'), ('close_event', 'Lock an event after everything is done.'), ('view_test_event', 'Show events for testing'), ('event_view_granular', 'See debug data like ip addresses'), ('event_view_debug', 'See debug events'), ('reopen_event', 'Reopen a closed, declined, or cancelled event'), ('edit_pull_list', 'Edit the event pull list'), ('check_in_out_pull_list', 'Check equipment in and out of the event pull list')), 'verbose_name': 'Event'},
        ),
        migrations.AddField(
            model_name='event2019',
            name='allow_crew_to_check_equipment',
            field=models.BooleanField(default=True, help_text='Allow checked-in crew to check in or out equipment on the Pull List.'),
        ),
        migrations.CreateModel(
            name='PullListEquipmentInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('details', models.TextField(blank=True, null=True)),
                ('snipe_id', models.PositiveIntegerField(blank=True, null=True)),
                ('quant', models.PositiveIntegerField(blank=True, null=True)),
                ('checked_out', models.BooleanField(default=False)),
                ('checked_in', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='events.category')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.baseevent')),
            ],
        ),
    ]
